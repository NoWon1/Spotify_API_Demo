# Generated by Django 5.2.4 on 2025-07-18 13:21

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ListeningHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("track_id", models.CharField(max_length=100)),
                ("track_name", models.CharField(max_length=200)),
                ("artist_name", models.CharField(max_length=200)),
                ("played_at", models.DateTimeField()),
                ("duration_played", models.IntegerField(default=0)),
                ("context_type", models.CharField(blank=True, max_length=50)),
                ("context_id", models.CharField(blank=True, max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="listening_history",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "listening_history",
                "ordering": ["-played_at"],
            },
        ),
        migrations.CreateModel(
            name="SearchHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("query", models.CharField(max_length=200)),
                ("search_type", models.CharField(max_length=20)),
                ("result_count", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="search_history",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "search_history",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SpotifyToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("access_token", models.TextField()),
                ("refresh_token", models.TextField()),
                ("token_type", models.CharField(default="Bearer", max_length=50)),
                ("expires_in", models.IntegerField()),
                ("scope", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="spotify_token",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "spotify_id",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                ("display_name", models.CharField(blank=True, max_length=100)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("country", models.CharField(blank=True, max_length=10)),
                ("profile_image", models.URLField(blank=True)),
                ("followers", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserRecommendation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("item_type", models.CharField(max_length=20)),
                ("item_id", models.CharField(max_length=100)),
                ("item_name", models.CharField(max_length=200)),
                ("score", models.FloatField(default=0.0)),
                ("reason", models.CharField(blank=True, max_length=500)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recommendations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_recommendations",
                "ordering": ["-score", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="UserAlbum",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("album_id", models.CharField(max_length=100)),
                ("name", models.CharField(max_length=200)),
                ("artist_name", models.CharField(max_length=200)),
                ("artist_id", models.CharField(blank=True, max_length=100)),
                ("image_url", models.URLField(blank=True)),
                ("total_tracks", models.IntegerField(default=0)),
                ("release_date", models.CharField(blank=True, max_length=20)),
                ("album_type", models.CharField(blank=True, max_length=50)),
                ("external_urls", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="favorite_albums",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_albums",
                "ordering": ["-created_at"],
                "unique_together": {("user", "album_id")},
            },
        ),
        migrations.CreateModel(
            name="UserArtist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("artist_id", models.CharField(max_length=100)),
                ("name", models.CharField(max_length=200)),
                ("image_url", models.URLField(blank=True)),
                ("followers", models.IntegerField(default=0)),
                ("popularity", models.IntegerField(default=0)),
                ("genres", models.JSONField(default=list)),
                ("external_urls", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="favorite_artists",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_artists",
                "ordering": ["-created_at"],
                "unique_together": {("user", "artist_id")},
            },
        ),
        migrations.CreateModel(
            name="UserPlaylist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("playlist_id", models.CharField(max_length=100)),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                ("image_url", models.URLField(blank=True)),
                ("total_tracks", models.IntegerField(default=0)),
                ("owner_name", models.CharField(blank=True, max_length=100)),
                ("owner_id", models.CharField(blank=True, max_length=100)),
                ("public", models.BooleanField(default=True)),
                ("collaborative", models.BooleanField(default=False)),
                ("followers", models.IntegerField(default=0)),
                ("external_urls", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="favorite_playlists",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_playlists",
                "ordering": ["-created_at"],
                "unique_together": {("user", "playlist_id")},
            },
        ),
        migrations.CreateModel(
            name="UserTrack",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("track_id", models.CharField(max_length=100)),
                ("name", models.CharField(max_length=200)),
                ("artist_name", models.CharField(max_length=200)),
                ("artist_id", models.CharField(blank=True, max_length=100)),
                ("album_name", models.CharField(max_length=200)),
                ("album_id", models.CharField(blank=True, max_length=100)),
                ("image_url", models.URLField(blank=True)),
                ("duration_ms", models.IntegerField(default=0)),
                ("popularity", models.IntegerField(default=0)),
                ("preview_url", models.URLField(blank=True, null=True)),
                ("explicit", models.BooleanField(default=False)),
                ("external_urls", models.JSONField(default=dict)),
                ("audio_features", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="favorite_tracks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_tracks",
                "ordering": ["-created_at"],
                "unique_together": {("user", "track_id")},
            },
        ),
    ]
